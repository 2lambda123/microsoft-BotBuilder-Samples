[form.en-us.lg](form.en-us.lg)

>> OnChooseProperty Prompt

# chooseProperties
> Choose properties activity
[Activity
    Text = ${chooseProperties_text()}
]

# chooseProperties_text
> Choose between different properties
- Did you mean ${choices(turn.dialogEvent.value, 'chooseProperty', 'or')}?

>> Show Card Prompt

# propertiesAsActivity(name, properties)
> Display value for properties as an activity
[Activity
    Attachments=${json(propertiesAsCard(name, properties))}
]

# propertiesAsCard(name, properties)
> Display value for properties as a card
-```
{
    "type": "AdaptiveCard",
    "version": "1.0",
    "body": [
        {
            "type": "TextBlock",
            "text": "${name}",
            "size": "large"
        },
        {
            "type": "FactSet",
            "facts": [${propertiesAsFacts(properties)}]
        }
    ],
    "$schema": "http://adaptivecards.io/schemas/adaptive-card.json"
}
```

# propertiesAsFacts(properties)
> Display property values as card facts
- ${join(foreach(properties, property, getPropertyAsFact(property)), ', ')}

# getPropertyAsFact(property)
> Display property value as a card fact
- {"title": "${propertyName(property)}", "value": "${replace(propertyValue(property, dialog[property]), '"', '\"')}"}

>> Help Global Prompt

# helpGlobal()
> Global help message activity
[Activity
    Text = ${helpGlobal_text()}
]

# helpGlobal_text()
> Global help message 
- ```
${requiredProperties()}
${optionalProperties()}
For each property you can add/remove values, clear, show, change or ask for help.
You can also ask for overall help, cancel the whole form or skip a step.```

# requiredProperties
> Display value for required properties
- IF: ${count($requiredProperties) > 0}
- Required properties include: ${join(foreach($requiredProperties, property, propertyName(property)), ', ')}
- ELSE:
- 

# optionalProperties
> Display value for optional properties
- IF: ${count(publicProperties()) > count($requiredProperties)}
- Optional properties include: ${join(foreach(where(publicProperties(), property, !contains($requiredProperties, property)), property, propertyName(property)), ', ')}${EOL()}
- ELSE:
- 

>> Help Reprompt

# helpReprompt
> Display reprompt activity
[Activity
    Text = ${helpReprompt_text()}
]

# helpReprompt_text
> Display value on reprompt
- ${if($expectedProperties, join(foreach(where($expectedProperties, expected, isTemplate(`${expected}_RepromptHelp_text`)), expected, template(`${expected}_RepromptHelp_text`)), EOL()), '')}

>> Cancel Prompt

# cancelPrompt
> Prompt activity to cancel a form
[Activity
    Text = ${cancelPrompt_text()}
]

# cancelPrompt_text
> Prompt to cancel a form
- Do you want to end the form? (yes/no)

>> Change Property Prompt

# changePropertyPrompt
> Prompt activity for property to change
[Activity
    Text = ${changePropertyPrompt_text()}
]

# changePropertyPrompt_text
> Prompt for property to change
- Is there any property you want to change? (no or the property name)

>> Choose Property Prompt

# choosePropertyPrompt
> Prompt activity for what property to change
[Activity
    Text = ${choosePropertyPrompt_text()}
]

# choosePropertyPrompt_text
> Prompt for what property to change
- Which property do you want to change?

>> not Understood Prompt

# notUnderstood
> Message for not understanding activity
[Activity
    Text = ${notUnderstood_text()}
]

# notUnderstood_text
> Message for not understanding
- Sorry, I do not understand ${join(foreach(turn.unrecognizedtext, chunk, `'${chunk}'`), ' or ')}